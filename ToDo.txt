Equipment:

Shutdown methods for listeners.
Actually don't need the EquipmentDisplay to have an 'update' method, can find some clever way to not check every frame. Since we technically are just waiting for an item to be double clicked, or in the future, an item to be dragged to a specific slot and the data updated.

In InventoryData, we make the equipItem method, responsible for removing the item from the inventory, and within that we would call an 'addEquippedItem' method from EquipmentData. In the InventoryDisplay, we would call the equipItem method inside the 'handleDoubleClick' method, because we want the item to be equipped on a double click. In EquipmentData, we would make the 'addEquippedItem' method, responsible for adding the item to the correct slot in the equipment 'equips' array. Finally, in the EquipmentDisplay, we would need to make sure the item's sprite that was just equipped shows up in the correct slot it was added to. Through all this, making sure to properly make sure we are calling get and set methods for the items and the equips arrays, to properly update their array data so the gamestate is happy and up to date.

The next task would be to put the item in the correct slot in the 'equips' array. For example, slot 0 is the index for helmets, slot 3 is for weapons, and slot index 4 is for offhands.

How might we now create that item we double clicked into the equipment data now?


takes in player to adjust his defence/attack/etc. (set and get methods will be used).
Player stats in equipment menu (player damage, defense, crit, etc.)


1. Looting Scene pop-up window (with enemy item drops).
2. Bank (Need chest in game to click on and bank stuff). Gold currency.
3. Store (Need NPC or chest in game to click on and view store menu.). Gold currency.
4. Pause Menu/Controls(Esc key brings up menu options (Load, Save, Options, Esc, etc.) (Options --> Audio/Keybinds/Graphics etc.))
5. Teleporter. Allows for movement between scenes. Animated.
6. Chatbox for console messages. Chatbox for NPCs. (For chatbox, try making the text not blurry with bitmap or whatever)
7. Quests & Interactions with NPCs.

--> (Future): Minimap
--> (Future): J for journal, M for map
--> (Future): Caps lock toggles run, in addition to the current shift-hold mechanism.
--> (Future): Hover over equipment gives stats & description & enchants & frost/fire stuff etc.
--> (Future): Loading Bar scene after the homescene that loads in assets.
--> (Future): Stat resets. Drink from the forgetfullness well or fountain.
--> (Future): More level up mechanics (golden confetti, then stats choices to increase max stats)
--> (Future): Weapon Type property for the items object. (Sword, Shield, Chest, helm, Axe, etc.)
--> (Future): Inventory Swapping items.
--> (Future): X button for inventory. Bag icon to open/close inventory too. (Done via bag background iteractable object pretty much?)
--> (Future): Have small button next to inventory bag with helmet and sword indicating that player can click and that also takes you to equipment scene.
--> (Future): potion cooldown timer, and ticker that displays top of screen (20s cooldown that ticks down).
--> (Future): Hitsplats on player and monster
--> (Future): Monster Attack Anims
--> (Future): Click to move/Click to initiate attack?
--> (Future): Monster Spawn zones instead of just random points. Would be same dimensions as their wander zone.
--> (Future): Monster 'wandering' while in idle state? Or new 'wander' state.
--> (Future): Defense stat on monsters & player. Also Attack stat related to total damage. Crit/Crit Eff. stats.
--> (Future): Debuffs and buffs.
--> (Future): Random % Chance for critical, base 5% or something. (no anim change, besides hitsplats), would work with both attack and special attack.
--> (Future): You can only save at the inn when you go to sleep.
--> (Future): Player and/or monster damage is random (from 0 to maxDamage basically)
--> (Future): Monster Attacking Sensor is not a circle but more closely related to their body shape.
--> (Future): Tooltip for inventory items displaying stats or description.

--> (Optional): Combine PlayerAttackState and PlayerSpecialAttackState.
--> (Optional): Refactor player stats/methods into a separate file? Player class is messy with its stats and methods.

--> (Small Bug): Multiple Monsters running like idiots at you, pushing you around and not respecting the attackSensor as a stopping place sometimes.
--> (Small Bug): If you aggro two enemies at once, only one will follow you. (Similar to how if you ran away from two monsters attack range quickly, only 1 would transition to attack state).
--> (Small Bug): Player facing wrong way when entering map. Handle direction in gamestate.